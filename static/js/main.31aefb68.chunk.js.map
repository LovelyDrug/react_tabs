{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","props","onTabSelected","tabs","selectedTabId","className","map","tab","classNames","id","href","onClick","title","find","content","App","useState","selectedTab","setSelectedTab","tabId","newSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"uLASaA,EAAO,SAACC,GACnB,IACEC,EAGED,EAHFC,cACAC,EAEEF,EAFFE,KACAC,EACEH,EADFG,cAOF,OACE,qCACE,qBAAKC,UAAU,gBAAf,SACE,6BACGF,EAAKG,KAAI,SAAAC,GAAG,OACX,oBACEF,UAAWG,IACT,CAAE,YAAaD,EAAIE,KAAOL,IAF9B,SAME,mBACEM,KAAI,WAAMH,EAAIE,IACdE,QAAS,WACHJ,EAAIE,KAAOL,GACbF,EAAcK,EAAIE,KAJxB,SAQGF,EAAIK,SAVFL,EAAIE,WAiBjB,qBAAKJ,UAAU,QAAQ,UAAQ,cAA/B,UA7BFF,EAAKU,MAAK,SAAAN,GAAG,OAAIA,EAAIE,KAAOL,MAAkBD,EAAK,IA8B9BW,cC1CZX,EAAO,CAClB,CAAEM,GAAI,QAASG,MAAO,QAASE,QAAS,eACxC,CAAEL,GAAI,QAASG,MAAO,QAASE,QAAS,eACxC,CAAEL,GAAI,QAASG,MAAO,QAASE,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASb,EAAK,IAApD,mBAAOc,EAAP,KAAoBC,EAApB,KAUA,OACE,sBAAKb,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,gCAEGY,EAAYL,SAGf,cAAC,EAAD,CACEV,cAhBgB,SAACiB,GACrB,IAAMC,EAAiBjB,EAAKU,MAC1B,SAAAN,GAAG,OAAIA,EAAIE,KAAOU,MACfhB,EAAK,GAEVe,EAAeE,IAYXjB,KAAMA,EACNC,cAAea,EAAYR,SC7BnCY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.31aefb68.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../react-app-env';\n\ninterface Props {\n  tabs: Tab[],\n  onTabSelected: (tabId: string) => void,\n  selectedTabId: string,\n}\n\nexport const Tabs = (props: Props) => {\n  const {\n    onTabSelected,\n    tabs,\n    selectedTabId,\n  } = props;\n\n  const getCurrentTab = () => (\n    tabs.find(tab => tab.id === selectedTabId) || tabs[0]\n  );\n\n  return (\n    <>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={classNames(\n                { 'is-active': tab.id === selectedTabId },\n              )}\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                onClick={() => {\n                  if (tab.id !== selectedTabId) {\n                    onTabSelected(tab.id);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"tab-content\">\n        {getCurrentTab().content}\n      </div>\n    </>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { useState } from 'react';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  const onTabSelected = (tabId: string) => {\n    const newSelectedTab = tabs.find(\n      tab => tab.id === tabId,\n    ) || tabs[0];\n\n    setSelectedTab(newSelectedTab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is&nbsp;\n        {selectedTab.title}\n      </h1>\n\n      <Tabs\n        onTabSelected={onTabSelected}\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}